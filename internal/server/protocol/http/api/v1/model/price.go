// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Price price
//
// swagger:model Price
type Price struct {

	// Final price
	// Required: true
	// Minimum: 0
	Final *float64 `json:"final"`

	// Original price
	// Required: true
	// Minimum: 0
	Original *float64 `json:"original"`
}

// Validate validates this price
func (m *Price) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFinal(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginal(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Price) validateFinal(formats strfmt.Registry) error {

	if err := validate.Required("final", "body", m.Final); err != nil {
		return err
	}

	if err := validate.Minimum("final", "body", *m.Final, 0, false); err != nil {
		return err
	}

	return nil
}

func (m *Price) validateOriginal(formats strfmt.Registry) error {

	if err := validate.Required("original", "body", m.Original); err != nil {
		return err
	}

	if err := validate.Minimum("original", "body", *m.Original, 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this price based on context it is used
func (m *Price) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Price) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Price) UnmarshalBinary(b []byte) error {
	var res Price
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
